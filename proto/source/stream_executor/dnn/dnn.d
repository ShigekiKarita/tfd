// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/stream_executor/dnn.proto

module stream_executor.dnn.dnn;

import google.protobuf;

enum protocVersion = 3012004;

class TensorDescriptorProto
{
    @Proto(1, Wire.none, Yes.packed) long[] dimensions = protoDefaultValue!(long[]);
    @Proto(2) DataType dataType = protoDefaultValue!(DataType);
    enum LayoutOneofCase
    {
        layoutOneofNotSet = 0,
        dataLayout = 3,
        filterLayout = 4,
    }
    LayoutOneofCase _layoutOneofCase = LayoutOneofCase.layoutOneofNotSet;
    @property LayoutOneofCase layoutOneofCase() { return _layoutOneofCase; }
    void clearLayoutOneof() { _layoutOneofCase = LayoutOneofCase.layoutOneofNotSet; }
    @Oneof("_layoutOneofCase") union
    {
        @Proto(3) DataLayout _dataLayout = protoDefaultValue!(DataLayout); mixin(oneofAccessors!_dataLayout);
        @Proto(4) FilterLayout _filterLayout; mixin(oneofAccessors!_filterLayout);
    }
}

class AlgorithmProto
{
    @Proto(1) long algoId = protoDefaultValue!(long);
    @Proto(2) MathType mathType = protoDefaultValue!(MathType);

    enum MathType
    {
        DEFAULT_MATH = 0,
        TENSOR_OP_MATH = 1,
    }
}

class ConvolutionDescriptorProto
{
    @Proto(1, Wire.none, Yes.packed) long[] paddings = protoDefaultValue!(long[]);
    @Proto(2, Wire.none, Yes.packed) long[] strides = protoDefaultValue!(long[]);
    @Proto(3, Wire.none, Yes.packed) long[] dilations = protoDefaultValue!(long[]);
    @Proto(4) DataType computeMode = protoDefaultValue!(DataType);
    @Proto(5) int groupCount = protoDefaultValue!(int);
    @Proto(6) ConvolutionMode convolutionMode = protoDefaultValue!(ConvolutionMode);
    @Proto(7) string name = protoDefaultValue!(string);
}

enum DataType
{
    kFloat = 0,
    kDouble = 1,
    kHalf = 2,
    kInt8 = 3,
    kInt32 = 4,
}

enum DataLayout
{
    kYXDepthBatch = 0,
    kYXBatchDepth = 1,
    kBatchYXDepth = 2,
    kBatchDepthYX = 3,
    kBatchDepthYX4 = 4,
}

enum FilterLayout
{
    kOutputInputYX = 0,
    kOutputYXInput = 1,
    kOutputInputYX4 = 2,
    kInputYXOutput = 3,
    kYXInputOutput = 4,
}

enum ActivationMode
{
    kNone = 0,
    kSigmoid = 1,
    kRelu = 2,
    kRelu6 = 3,
    kReluX = 4,
    kTanh = 5,
    kBandPass = 6,
}

enum ConvolutionMode
{
    CROSS_CORRELATION = 0,
    CONVOLUTION = 1,
}

enum ConvolutionKind
{
    INVALID = 0,
    FORWARD = 1,
    BACKWARD_FILTER = 2,
    BACKWARD_DATA = 3,
    FORWARD_BIAS_ACTIVATION = 4,
}
