// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/struct.proto

module tensorflow.struct_;

import google.protobuf;
import tensorflow.tensor_shape;
import tensorflow.types;

enum protocVersion = 3012004;

class StructuredValue
{
    enum KindCase
    {
        kindNotSet = 0,
        noneValue = 1,
        float64Value = 11,
        int64Value = 12,
        stringValue = 13,
        boolValue = 14,
        tensorShapeValue = 31,
        tensorDtypeValue = 32,
        tensorSpecValue = 33,
        typeSpecValue = 34,
        listValue = 51,
        tupleValue = 52,
        dictValue = 53,
        namedTupleValue = 54,
    }
    KindCase _kindCase = KindCase.kindNotSet;
    @property KindCase kindCase() { return _kindCase; }
    void clearKind() { _kindCase = KindCase.kindNotSet; }
    @Oneof("_kindCase") union
    {
        @Proto(1) NoneValue _noneValue = protoDefaultValue!(NoneValue); mixin(oneofAccessors!_noneValue);
        @Proto(11) double _float64Value; mixin(oneofAccessors!_float64Value);
        @Proto(12, Wire.zigzag) long _int64Value; mixin(oneofAccessors!_int64Value);
        @Proto(13) string _stringValue; mixin(oneofAccessors!_stringValue);
        @Proto(14) bool _boolValue; mixin(oneofAccessors!_boolValue);
        @Proto(31) TensorShapeProto _tensorShapeValue; mixin(oneofAccessors!_tensorShapeValue);
        @Proto(32) DataType _tensorDtypeValue; mixin(oneofAccessors!_tensorDtypeValue);
        @Proto(33) TensorSpecProto _tensorSpecValue; mixin(oneofAccessors!_tensorSpecValue);
        @Proto(34) TypeSpecProto _typeSpecValue; mixin(oneofAccessors!_typeSpecValue);
        @Proto(51) ListValue _listValue; mixin(oneofAccessors!_listValue);
        @Proto(52) TupleValue _tupleValue; mixin(oneofAccessors!_tupleValue);
        @Proto(53) DictValue _dictValue; mixin(oneofAccessors!_dictValue);
        @Proto(54) NamedTupleValue _namedTupleValue; mixin(oneofAccessors!_namedTupleValue);
    }
}

class NoneValue
{
}

class ListValue
{
    @Proto(1) StructuredValue[] values = protoDefaultValue!(StructuredValue[]);
}

class TupleValue
{
    @Proto(1) StructuredValue[] values = protoDefaultValue!(StructuredValue[]);
}

class DictValue
{
    @Proto(1) StructuredValue[string] fields = protoDefaultValue!(StructuredValue[string]);
}

class PairValue
{
    @Proto(1) string key = protoDefaultValue!(string);
    @Proto(2) StructuredValue value = protoDefaultValue!(StructuredValue);
}

class NamedTupleValue
{
    @Proto(1) string name = protoDefaultValue!(string);
    @Proto(2) PairValue[] values = protoDefaultValue!(PairValue[]);
}

class TensorSpecProto
{
    @Proto(1) string name = protoDefaultValue!(string);
    @Proto(2) TensorShapeProto shape = protoDefaultValue!(TensorShapeProto);
    @Proto(3) DataType dtype = protoDefaultValue!(DataType);
}

class TypeSpecProto
{
    @Proto(1) TypeSpecClass typeSpecClass = protoDefaultValue!(TypeSpecClass);
    @Proto(2) StructuredValue typeState = protoDefaultValue!(StructuredValue);
    @Proto(3) string typeSpecClassName = protoDefaultValue!(string);

    enum TypeSpecClass
    {
        UNKNOWN = 0,
        SPARSE_TENSOR_SPEC = 1,
        INDEXED_SLICES_SPEC = 2,
        RAGGED_TENSOR_SPEC = 3,
        TENSOR_ARRAY_SPEC = 4,
        DATA_DATASET_SPEC = 5,
        DATA_ITERATOR_SPEC = 6,
        OPTIONAL_SPEC = 7,
        PER_REPLICA_SPEC = 8,
        VARIABLE_SPEC = 9,
    }
}
