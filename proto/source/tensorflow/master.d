// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/master.proto

module tensorflow.master;

import google.protobuf;
import tensorflow.device_attributes;
import tensorflow.graph;
import tensorflow.tensor;
import tensorflow.config;
import tensorflow.error.error_codes;
import tensorflow.named_tensor;

enum protocVersion = 3012004;

class CreateSessionRequest
{
    @Proto(1) GraphDef graphDef = protoDefaultValue!(GraphDef);
    @Proto(2) ConfigProto config = protoDefaultValue!(ConfigProto);
    @Proto(3) string target = protoDefaultValue!(string);
}

class CreateSessionResponse
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
    @Proto(2) long graphVersion = protoDefaultValue!(long);
}

class ExtendSessionRequest
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
    @Proto(2) GraphDef graphDef = protoDefaultValue!(GraphDef);
    @Proto(3) long currentGraphVersion = protoDefaultValue!(long);
}

class ExtendSessionResponse
{
    @Proto(4) long newGraphVersion = protoDefaultValue!(long);
}

class RunStepRequest
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
    @Proto(2) NamedTensorProto[] feed = protoDefaultValue!(NamedTensorProto[]);
    @Proto(3) string[] fetch = protoDefaultValue!(string[]);
    @Proto(4) string[] target = protoDefaultValue!(string[]);
    @Proto(5) RunOptions options = protoDefaultValue!(RunOptions);
    @Proto(6) string partialRunHandle = protoDefaultValue!(string);
    @Proto(7) bool storeErrorsInResponseBody = protoDefaultValue!(bool);
    @Proto(8) long requestId = protoDefaultValue!(long);
}

class RunStepResponse
{
    @Proto(1) NamedTensorProto[] tensor = protoDefaultValue!(NamedTensorProto[]);
    @Proto(2) RunMetadata metadata = protoDefaultValue!(RunMetadata);
    @Proto(3) Code statusCode = protoDefaultValue!(Code);
    @Proto(4) string statusErrorMessage = protoDefaultValue!(string);
}

class PartialRunSetupRequest
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
    @Proto(2) string[] feed = protoDefaultValue!(string[]);
    @Proto(3) string[] fetch = protoDefaultValue!(string[]);
    @Proto(4) string[] target = protoDefaultValue!(string[]);
    @Proto(5) long requestId = protoDefaultValue!(long);
}

class PartialRunSetupResponse
{
    @Proto(1) string partialRunHandle = protoDefaultValue!(string);
}

class CloseSessionRequest
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
}

class CloseSessionResponse
{
}

class ResetRequest
{
    @Proto(1) string[] container = protoDefaultValue!(string[]);
    @Proto(2) string[] deviceFilters = protoDefaultValue!(string[]);
}

class ResetResponse
{
}

class ListDevicesRequest
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
}

class ListDevicesResponse
{
    @Proto(1) DeviceAttributes[] localDevice = protoDefaultValue!(DeviceAttributes[]);
    @Proto(2) DeviceAttributes[] remoteDevice = protoDefaultValue!(DeviceAttributes[]);
}

class MakeCallableRequest
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
    @Proto(2) CallableOptions options = protoDefaultValue!(CallableOptions);
    @Proto(3) long requestId = protoDefaultValue!(long);
}

class MakeCallableResponse
{
    @Proto(1) long handle = protoDefaultValue!(long);
}

class RunCallableRequest
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
    @Proto(2) long handle = protoDefaultValue!(long);
    @Proto(3) TensorProto[] feed = protoDefaultValue!(TensorProto[]);
    @Proto(4) long requestId = protoDefaultValue!(long);
}

class RunCallableResponse
{
    @Proto(1) TensorProto[] fetch = protoDefaultValue!(TensorProto[]);
    @Proto(2) RunMetadata metadata = protoDefaultValue!(RunMetadata);
}

class ReleaseCallableRequest
{
    @Proto(1) string sessionHandle = protoDefaultValue!(string);
    @Proto(2) long handle = protoDefaultValue!(long);
}

class ReleaseCallableResponse
{
}
